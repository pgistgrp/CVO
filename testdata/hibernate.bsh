/*
 * Bean Shell Script.
 * Testing script for hibernate execution.
 */

import org.pgist.funding.UserFundingSourceToll;

getFundingSource(name) {
    query = session.createQuery("from FundingSource where name=?");
    query.setString(0, name);
    fs = query.uniqueResult();
    if (fs==null) throw new RuntimeException(name + " is not found");
    return fs;
}

shouldDoIt(user, toll) {
    if (user==null) throw new RuntimeException("user is null");
    if (user.userCommute==null) return false;
    
    for (one : user.userCommute.tolls) {
        if (one.fundingSource.name==toll.name) return false;
    }
    
    return true;
}

doIt(user, fs) {
    toll = new UserFundingSourceToll();
    toll.setName(fs.name);
    toll.setOffPeakTrips(0);
    toll.setPeakTrips(0);
    toll.setUsed(false);
    toll.setFundingSource(fs);
    user.userCommute.tolls.add(toll);
}

i5n = getFundingSource("Toll on I-5, north of I-90");
i5s = getFundingSource("Toll on I-5, south of I-90");

print("Toll on I-5, north of I-90: "+i5n.id);
print("Toll on I-5, south of I-90: "+i5s.id);

hql = "from User";
query = session.createQuery(hql);
for (user : query.list()) {
    print(user.loginname);
    if (shouldDoIt(user, i5n)) doIt(user, i5n);
    if (shouldDoIt(user, i5s)) doIt(user, i5s);
}


return;

userPackageSuiteId = 10223;
projectSuiteId = 10217;
fundingSuiteId = 10218;

hql = "from UserPackage where suite.id=?";
query = session.createQuery(hql);
query.setLong(0, userPackageSuiteId);
upkgs = query.list();

hql = "from ProjectSuite where id=?";
query = session.createQuery(hql);
query.setLong(0, projectSuiteId);
projects = query.uniqueResult().references;

hql = "from FundingSourceSuite where id=?";
query = session.createQuery(hql);
query.setLong(0, fundingSuiteId);
fundings = query.uniqueResult().references;

print("user-project matrix in user package: ");

for (upkg: upkgs) {
  for (project: projects) {
    for (projectAltRef: project.altRefs) {
      if (upkg.projAltRefs.contains(projectAltRef)) System.out.print("1 ");
      else System.out.print("0 ");
    }
  }
  System.out.println();
}

System.out.println();

print("user-funding matrix in user package: ");

for (upkg: upkgs) {
  for (funding: fundings) {
    for (fundingAltRef: funding.altRefs) {
      if (upkg.fundAltRefs.contains(fundingAltRef)) System.out.print("1 ");
      else System.out.print("0 ");
    }
  }
  System.out.println();
}

