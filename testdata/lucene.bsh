/*
 * Bean Shell Script.
 * Testing script for lucene execution.
 */
import org.apache.lucene.document.Document;
import org.apache.lucene.document.Field;
import org.apache.lucene.analysis.standard.StandardAnalyzer;
import org.apache.lucene.queryParser.QueryParser;
import org.apache.lucene.search.TopDocCollector;

writer = searchHelper.getIndexWriter();
try {
  doc = new Document();
  doc.add( new Field("contents", "article atmosphere author simple test!", Field.Store.YES, Field.Index.TOKENIZED) );
  writer.addDocument(doc);
  writer.optimize();
} finally {
  writer.close();
}


/*
reader = searchHelper.getIndexReader();
reader.close();
*/


queryStr = "a";

String[] words = queryStr.split(" ");
StringBuilder sb = new StringBuilder("(");

for (String s : words) {
    if (s!=null && s.length()>0) {
        if (sb.length()>1) sb.append(" OR ");
        sb.append(s).append("*");
    }
}
sb.append(")");

queryStr = sb.toString();

String luceneQuery = "cars*";

searcher = searchHelper.getIndexSearcher();
try {
  parser = new QueryParser("contents", new StandardAnalyzer());
  //query = searchHelper.getParser().parse(queryStr);
  query = parser.parse(queryStr);
  print(query);
  collector = new TopDocCollector(5 * 20);
  searcher.search(query, collector);
  print(collector.getTotalHits());
  hits = collector.topDocs().scoreDocs;
  for (hit : hits) {
    Document doc = searcher.doc(hit.doc);
    print("---> "+doc.get("type")+" | "+doc.get("link")+" | "+doc.get("contents"));
  }
  
  //hits = searcher.search(query);
  /*
  print("Totally found "+hits.length()+" documents.");
  
  for (i=0; i<hits.length(); i++) {
      doc = hits.doc(i);
      print("Found one document:");
      for (one : doc.getFields()) {
          print("    "+one);
      }
  }//for
  */
} finally {
  searcher.close();
}

