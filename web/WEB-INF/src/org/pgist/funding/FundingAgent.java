package org.pgist.funding;

import java.util.Collection;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.pgist.util.PageSetting;


/**
 * 
 * @author kenny
 *
 */
public class FundingAgent {
    
    
    private FundingService fundingService;
    
    
    public void setFundingService(FundingService fundingService) {
        this.fundingService = fundingService;
    }
    
    
    /*
     * ------------------------------------------------------------------------
     */
    
    
    /**
     * Get funding sources
     * 
     * @param params a Map contains:<br>
     *   <ul>
     *     <li>page - int, the current page</li>
     *     <li>count - int, number of records shown on one page</li>
     *   </ul>
     *   
     * @return a Map contains:<br>
     *   <ul>
     *     <li>successful - a boolean value denoting if the operation succeeds</li>
     *     <li>reason - reason why operation failed (valid when successful==false)</li>
     *     <li>
     *       html - string, html source segment generated by "". In this page the following variables are avaiable:<br>
     *         <ul>
     *           <li>fundings - a list of FundingSource objects</li>
     *           <li>setting - a PageSetting object</li>
     *         </ul>
     *     </li>
     *   </ul>
     */
    public Map getFundingSources(HttpServletRequest request, Map params) {
        Map map = new HashMap();
        map.put("successful", false);
        
        try {
            PageSetting setting = new PageSetting();
            
            setting.setPage((String) request.getParameter("page"));
            setting.setRowOfPage((String) request.getParameter("count"));
            
            Collection fundings = fundingService.getFundingSources(setting);
            
            map.put("successful", true);
        } catch (Exception e) {
            e.printStackTrace();
            map.put("reason", e.getMessage());
            return map;
        }
        
        return map;
    }//getFundingSources()
    
    
    /**
     * Create a new funding source
     * 
     * @param params a Map contains:<br>
     *   <ul>
     *     <li>name - string, name of the funding source</li>
     *   </ul>
     *   
     * @return a Map contains:<br>
     *   <ul>
     *     <li>successful - a boolean value denoting if the operation succeeds</li>
     *     <li>reason - reason why operation failed (valid when successful==false)</li>
     *     <li>id - the id of the newly created funding source</li>
     *   </ul>
     */
    public Map createFundingSource(Map params) {
        Map map = new HashMap();
        map.put("successful", false);
        
        try {
            String name = (String) params.get("name");
            if (name==null || name.trim().length()==0) {
                map.put("reason", "name is required.");
            }
            
            FundingSource funding = fundingService.createFundingSource(name);
            
            map.put("id", funding.getId());
            
            map.put("successful", true);
        } catch (Exception e) {
            e.printStackTrace();
            map.put("reason", e.getMessage());
            return map;
        }
        
        return map;
    }//createFundingSource()
    
    
    /**
     * Edit a given funding source
     * 
     * @param params a Map contains:<br>
     *   <ul>
     *     <li>id - int, id of the FundingSource object</li>
     *     <li>name - string, name of the funding source</li>
     *   </ul>
     *   
     * @return a Map contains:<br>
     *   <ul>
     *     <li>successful - a boolean value denoting if the operation succeeds</li>
     *     <li>reason - reason why operation failed (valid when successful==false)</li>
     *   </ul>
     */
    public Map editFundingSource(Map params) {
        Map map = new HashMap();
        map.put("successful", false);
        
        try {
            Long id = new Long((String) params.get("id"));
            
            String name = (String) params.get("name");
            if (name==null || name.trim().length()==0) {
                map.put("reason", "name is required.");
            }
            
            fundingService.editFundingSource(id, name);
            
            map.put("successful", true);
        } catch (Exception e) {
            e.printStackTrace();
            map.put("reason", e.getMessage());
            return map;
        }
        
        return map;
    }//editFundingSource()
    
    
}//class FundingAgent
