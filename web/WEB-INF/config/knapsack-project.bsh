/*
 * Fitness function for selecting projects.
**/

import org.pgist.packages.knapsack.GAKnapsackCalculator;
import org.pgist.packages.knapsack.GAKnapsackFitnessProxy;

evolutionTimes = 340;
populationSize = 150;

fitnessFunction = new GAKnapsackFitnessProxy() {
    
    protected GAKnapsackCalculator calculator;
    
    /*
     * Calculator.
    **/
    public void setCalculator(GAKnapsackCalculator calculator1) {
        calculator = calculator1;
    }
    
    /*
     * -----------------------------------------------------------
    **/
    
    double benefitBonus(double totalBenefit) {
        return Math.min(GAKnapsackCalculator.MAX_BOUND, (totalBenefit * totalBenefit * totalBenefit));
    }//benefitBonus()
    

        double costDifferencePenalty(double costDifference, double limit, double totalBenefit) {
        if(costDifference < 0){
            return Math.min(-GAKnapsackCalculator.MAX_BOUND,(totalBenefit * totalBenefit * totalBenefit) * (costDifference/limit));
         }else if(costDifference < 100000000){
            return Math.max(GAKnapsackCalculator.MAX_BOUND, (totalBenefit * totalBenefit * totalBenefit));
                     }else{
            return Math.max(GAKnapsackCalculator.MAX_BOUND, (totalBenefit * totalBenefit * totalBenefit/4));
        }
    }//costDifferencePenalty()
    
    /*
     * -----------------------------------------------------------
    **/
    
    public double evaluate(chromosome) {
        double totalCost = calculator.getTotalCost(chromosome);
double limit = calculator.limit;
        double costDifference = limit - totalCost;
        double totalBenefit = calculator.getTotalBenefit(chromosome);
        double fitness = 0.0d;
        
        fitness += benefitBonus(totalBenefit);
        fitness += costDifferencePenalty(costDifference, limit, totalBenefit);

         
        // Make sure fitness value is always positive.
        return Math.max(1.0d, fitness);
    }//evaluate()
    
};//class GAKnapsackFitnessProxy


